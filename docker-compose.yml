services:
  # Database MariaDB
  db:
    image: mariadb:10.6
    container_name: cinfoeat-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: cinfoeat
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: cinfoeat
      MYSQL_PASSWORD: cinfoeat
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - cinfoeat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Node.js
  backend:
    build:
      context: ./new-app/backend
      dockerfile: Dockerfile
    container_name: cinfoeat-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=3001
      - DB_HOST=db
      - DB_USER=cinfoeat
      - DB_PASSWORD=cinfoeat
      - DB_NAME=cinfoeat
      - JWT_SECRET=cinfoeat_jwt_secret_key
      - JWT_EXPIRE=24h
      - PUBLIC_VAPID_KEY=${PUBLIC_VAPID_KEY}
      - PRIVATE_VAPID_KEY=${PRIVATE_VAPID_KEY}
      - WEB_PUSH_CONTACT=mailto:admin@example.com
      - LDAP_SERVER=${LDAP_URL}
      - LDAP_USER=${LDAP_BIND_DN}
      - LDAP_PASSWORD=${LDAP_BIND_CREDENTIALS}
      - LDAP_BASE_DN=${LDAP_SEARCH_BASE}
      - NODE_ENV=production
    volumes:
      - ./ssl:/app/ssl
    ports:
      - "3002:3001"
    networks:
      - cinfoeat-network

  # Frontend React con Nginx
  frontend:
    build:
      context: ./new-app/frontend
      dockerfile: Dockerfile
    container_name: cinfoeat-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=/api
      - REACT_APP_BACKEND_URL=
    volumes:
      - ./new-app/frontend/src:/app/src
      - ./new-app/frontend/public:/app/public
      - ./new-app/frontend/package.json:/app/package.json
      - ./new-app/frontend/package-lock.json:/app/package-lock.json
    ports:
      - "3000:3000"
    networks:
      - cinfoeat-network

  # Nginx Reverse Proxy principale
  nginx:
    image: nginx:alpine
    container_name: cinfoeat-nginx
    ports:
#      - "3080:80"
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - cinfoeat-network
#      - nginx_network_internal

  adminer:
    image: adminer
    container_name: cinfoeat-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=pepa-linha
      - ADMINER_DEFAULT_DATABASE=cinfoeat
      - ADMINER_DEFAULT_USERNAME=cinfoeat
      - ADMINER_DEFAULT_PASSWORD=cinfoeat
    depends_on:
      - db
    networks:
      - cinfoeat-network

networks:
  cinfoeat-network:
    driver: bridge
 # nginx_network_internal:
 #   external: true


volumes:
  db_data:
  mariadb_data:
